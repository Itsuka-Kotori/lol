OPTION NV_bindless_texture;
 PARAM c[16] = { program.local[0..15] };
ATTRIB vertex_attrib[] = { vertex.attrib[0..1] };
OUTPUT result_attrib[] = { result.attrib[0..2] };
TEMP R0, R1, R2;
MUL.F R0.xyz, vertex.attrib[0].y, c[4];
MAD.F R0.xyz, vertex.attrib[0].x, c[3], R0;
MAD.F R0.xyz, vertex.attrib[0].z, c[5], R0;
ADD.F R2.xyz, R0, c[15];
ADD.F R1.xyz, -R2, c[14];
DP3.F R0.w, R1, R1;
RSQ.F R0.w, R0.w;
MUL.F R0.xyz, vertex.attrib[1].y, c[7];
MAD.F R0.xyz, vertex.attrib[1].x, c[6], R0;
MUL.F R1.xyz, R0.w, R1;
MAD.F R0.xyz, vertex.attrib[1].z, c[8], R0;
DP3.F R0.w, R1, R0;
SLT.F R1.x, R0.w, {0, 0, 0, 0};
SGT.F R0.w, R0, {0, 0, 0, 0}.x;
TRUNC.U R1.x, R1;
TRUNC.U R0.w, R0;
I2F.U R1.x, R1;
I2F.U R0.w, R0;
ADD.F R0.w, R0, -R1.x;
MUL.F R1, vertex.attrib[0].y, c[10];
MOV.F result.attrib[1], R0;
MAD.F R0, vertex.attrib[0].x, c[9], R1;
MAD.F R0, vertex.attrib[0].z, c[11], R0;
ADD.F result.position, R0, c[12];
MUL.F R1.xyz, vertex.attrib[0].y, c[1];
MAD.F R1.xyz, vertex.attrib[0].x, c[0], R1;
MAD.F R0.xyz, vertex.attrib[0].z, c[2], R1;
MOV.F result.attrib[0].xyz, R2;
ADD.F result.attrib[2].xyz, R0, c[13];
MOV.F result.attrib[2].w, {1, 0, 0, 0}.x;
END
                                              {switch};                                                                                                                                                                                                                                       ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ                                                                                                                                         
  !!NVfp5.0
OPTION NV_gpu_program_fp64;
OPTION NV_bindless_texture;
 PARAM c[5] = { program.local[0..4] };
CBUFFER buf0[] = { program.buffer[0] };
ATTRIB fragment_attrib[] = { fragment.attrib[0..2] };
TEMP R0, R1;
LONG TEMP D0;
TEMP RC, HC;
OUTPUT result_color0 = result.color;
DP2.F R0.x, fragment.attrib[2].xzzw, fragment.attrib[2].xzzw;
RSQ.F R0.x, R0.x;
RCP.F R0.x, R0.x;
MAX.F R0.x, R0, {9.99999975e-005, 0, 0, 0};
DIV.F R0.y, fragment.attrib[2].x, R0.x;
MAD.F R0.z, |R0.y|, {-0.0187292993, 0.0742610022, 0, 0}.x, {-0.0187292993, 0.0742610022, 0, 0}.y;
MAD.F R0.z, |R0.y|, R0, {-0.212114394, 0, 0, 0}.x;
ADD.F R0.w, -|R0.y|, {1, 0, 0, 0}.x;
MAD.F R0.z, |R0.y|, R0, {1.57072902, 0, 0, 0}.x;
RSQ.F R0.w, R0.w;
SLT.F R0.y, R0, {0, 0, 0, 0}.x;
TRUNC.U R0.y, R0;
DIV.F R0.z, R0, R0.w;
I2F.U R0.y, R0;
MUL.F R0.w, R0.y, R0.z;
MAD.F R0.z, -R0.w, {2, 0, 0, 0}.x, R0;
MAD.F R0.y, R0, {3.14159298, 0, 0, 0}.x, R0.z;
SLT.F R0.z, fragment.attrib[2], {0, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.z;
MUL.F R0.y, R0, {0.159154937, 0, 0, 0}.x;
IF NE.x;
ADD.F R0.y, -R0, {1, 0, 0, 0}.x;
ENDIF;
SLT.F R0.w, R0.y, c[4].x;
SGT.F R0.z, c[4], {0, 0, 0, 0}.x;
TRUNC.U R0.w, R0;
TRUNC.U R0.z, R0;
AND.U.CC HC.x, R0.z, R0.w;
ADD.F R0.y, R0, -c[4].x;
IF NE.x;
ADD.F R0.y, R0, {1, 0, 0, 0}.x;
ENDIF;
SGT.F R0.w, R0.y, {0, 0, 0, 0}.x;
SLT.F R0.z, c[4], {0, 0, 0, 0}.x;
TRUNC.U R0.w, R0;
TRUNC.U R0.z, R0;
AND.U.CC HC.x, R0.z, R0.w;
IF NE.x;
ADD.F R0.y, R0, {-1, 0, 0, 0}.x;
ENDIF;
DIV.F R0.x, fragment.attrib[2].y, R0.x;
MAX.F R0.w, |R0.x|, {1, 0, 0, 0}.x;
MIN.F R0.z, |R0.x|, {1, 0, 0, 0}.x;
DIV.F R0.z, R0, R0.w;
MUL.F R0.w, R0.z, R0.z;
MAD.F R1.x, R0.w, {-0.0134804696, 0.0574773103, 0, 0}, {-0.0134804696, 0.0574773103, 0, 0}.y;
MAD.F R1.x, R1, R0.w, {-0.121239103, 0, 0, 0};
MAD.F R1.x, R1, R0.w, {0.1956359, 0, 0, 0};
MAD.F R1.x, R1, R0.w, {-0.33299461, 0, 0, 0};
MAD.F R0.w, R1.x, R0, {0.999995589, 0, 0, 0}.x;
SGT.F R1.x, |R0|, {1, 0, 0, 0};
TRUNC.U.CC HC.x, R1;
MUL.F R0.z, R0.w, R0;
IF NE.x;
ADD.F R0.z, -R0, {1.57079601, 0, 0, 0}.x;
ELSE;
ENDIF;
SLT.F R0.w, R0.x, {0, 0, 0, 0}.x;
MOV.F R0.x, R0.z;
TRUNC.U.CC HC.x, R0.w;
MOV.F R0.x(NE), -R0.z;
MAD.F R0.x, R0, {0.318309873, 0, 0, 0}, c[4].y;
MOV.F R0.z, R0.y;
MOV.F R0.w, -R0.x;
MUL.F R0.xy, R0.zwzw, c[4].zwzw;
SGT.S R0.z, fragment.facing.x, {0, 0, 0, 0}.x;
MOV.U.CC RC.x, -R0.z;
FRC.F R0.xy, R0;
IF NE.x;
MOV.F R0.z, {1, 0, 0, 0}.x;
ELSE;
MOV.F R0.z, {-1, 0, 0, 0}.x;
ENDIF;
MAD.F R1.xyz, R0.z, c[1], c[2];
PK64.U D0.x, c[0];
TEX.F R0, R0, handle(D0.x), 2D;
MUL.F R1.xyz, R1, c[3].y;
MAD.F result_color0.xyz, R0, c[3].x, R1;
MOV.F result_color0.w, R0;
END
                                              {switch};
OPTION NV_bindless_texture;
 PARAM c[16] = { program.local[0..15] };
ATTRIB vertex_attrib[] = { vertex.attrib[0..1] };
OUTPUT result_attrib[] = { result.attrib[0..2] };
TEMP R0, R1, R2;
MUL.F R0.xyz, vertex.attrib[0].y, c[4];
MAD.F R0.xyz, vertex.attrib[0].x, c[3], R0;
MAD.F R0.xyz, vertex.attrib[0].z, c[5], R0;
ADD.F R2.xyz, R0, c[15];
ADD.F R1.xyz, -R2, c[14];
DP3.F R0.w, R1, R1;
RSQ.F R0.w, R0.w;
MUL.F R0.xyz, vertex.attrib[1].y, c[7];
MAD.F R0.xyz, vertex.attrib[1].x, c[6], R0;
MUL.F R1.xyz, R0.w, R1;
MAD.F R0.xyz, vertex.attrib[1].z, c[8], R0;
DP3.F R0.w, R1, R0;
SLT.F R1.x, R0.w, {0, 0, 0, 0};
SGT.F R0.w, R0, {0, 0, 0, 0}.x;
TRUNC.U R1.x, R1;
TRUNC.U R0.w, R0;
I2F.U R1.x, R1;
I2F.U R0.w, R0;
ADD.F R0.w, R0, -R1.x;
MUL.F R1, vertex.attrib[0].y, c[10];
MOV.F result.attrib[1], R0;
MAD.F R0, vertex.attrib[0].x, c[9], R1;
MAD.F R0, vertex.attrib[0].z, c[11], R0;
ADD.F result.position, R0, c[12];
MUL.F R1.xyz, vertex.attrib[0].y, c[1];
MAD.F R1.xyz, vertex.attrib[0].x, c[0], R1;
MAD.F R0.xyz, vertex.attrib[0].z, c[2], R1;
MOV.F result.attrib[0].xyz, R2;
ADD.F result.attrib[2].xyz, R0, c[13];
MOV.F result.attrib[2].w, {1, 0, 0, 0}.x;
END
                                              {switch};                                                                                                                                                                                                                                                                             ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ                                                                                                                                         
  !!NVfp5.0
OPTION NV_gpu_program_fp64;
OPTION NV_bindless_texture;
 PARAM c[5] = { program.local[0..4] };
CBUFFER buf0[] = { program.buffer[0] };
ATTRIB fragment_attrib[] = { fragment.attrib[0..2] };
TEMP R0, R1;
LONG TEMP D0;
TEMP RC, HC;
OUTPUT result_color0 = result.color;
DP2.F R0.x, fragment.attrib[2].xzzw, fragment.attrib[2].xzzw;
RSQ.F R0.x, R0.x;
RCP.F R0.x, R0.x;
MAX.F R0.x, R0, {9.99999975e-005, 0, 0, 0};
DIV.F R0.y, fragment.attrib[2].x, R0.x;
MAD.F R0.z, |R0.y|, {-0.0187292993, 0.0742610022, 0, 0}.x, {-0.0187292993, 0.0742610022, 0, 0}.y;
MAD.F R0.z, |R0.y|, R0, {-0.212114394, 0, 0, 0}.x;
ADD.F R0.w, -|R0.y|, {1, 0, 0, 0}.x;
MAD.F R0.z, |R0.y|, R0, {1.57072902, 0, 0, 0}.x;
RSQ.F R0.w, R0.w;
SLT.F R0.y, R0, {0, 0, 0, 0}.x;
TRUNC.U R0.y, R0;
DIV.F R0.z, R0, R0.w;
I2F.U R0.y, R0;
MUL.F R0.w, R0.y, R0.z;
MAD.F R0.z, -R0.w, {2, 0, 0, 0}.x, R0;
MAD.F R0.y, R0, {3.14159298, 0, 0, 0}.x, R0.z;
SLT.F R0.z, fragment.attrib[2], {0, 0, 0, 0}.x;
TRUNC.U.CC HC.x, R0.z;
MUL.F R0.y, R0, {0.159154937, 0, 0, 0}.x;
IF NE.x;
ADD.F R0.y, -R0, {1, 0, 0, 0}.x;
ENDIF;
SLT.F R0.w, R0.y, c[4].x;
SGT.F R0.z, c[4], {0, 0, 0, 0}.x;
TRUNC.U R0.w, R0;
TRUNC.U R0.z, R0;
AND.U.CC HC.x, R0.z, R0.w;
ADD.F R0.y, R0, -c[4].x;
IF NE.x;
ADD.F R0.y, R0, {1, 0, 0, 0}.x;
ENDIF;
SGT.F R0.w, R0.y, {0, 0, 0, 0}.x;
SLT.F R0.z, c[4], {0, 0, 0, 0}.x;
TRUNC.U R0.w, R0;
TRUNC.U R0.z, R0;
AND.U.CC HC.x, R0.z, R0.w;
IF NE.x;
ADD.F R0.y, R0, {-1, 0, 0, 0}.x;
ENDIF;
DIV.F R0.x, fragment.attrib[2].y, R0.x;
MAX.F R0.w, |R0.x|, {1, 0, 0, 0}.x;
MIN.F R0.z, |R0.x|, {1, 0, 0, 0}.x;
DIV.F R0.z, R0, R0.w;
MUL.F R0.w, R0.z, R0.z;
MAD.F R1.x, R0.w, {-0.0134804696, 0.0574773103, 0, 0}, {-0.0134804696, 0.0574773103, 0, 0}.y;
MAD.F R1.x, R1, R0.w, {-0.121239103, 0, 0, 0};
MAD.F R1.x, R1, R0.w, {0.1956359, 0, 0, 0};
MAD.F R1.x, R1, R0.w, {-0.33299461, 0, 0, 0};
MAD.F R0.w, R1.x, R0, {0.999995589, 0, 0, 0}.x;
SGT.F R1.x, |R0|, {1, 0, 0, 0};
TRUNC.U.CC HC.x, R1;
MUL.F R0.z, R0.w, R0;
IF NE.x;
ADD.F R0.z, -R0, {1.57079601, 0, 0, 0}.x;
ELSE;
ENDIF;
SLT.F R0.w, R0.x, {0, 0, 0, 0}.x;
MOV.F R0.x, R0.z;
TRUNC.U.CC HC.x, R0.w;
MOV.F R0.x(NE), -R0.z;
MAD.F R0.x, R0, {0.318309873, 0, 0, 0}, c[4].y;
MOV.F R0.z, R0.y;
MOV.F R0.w, -R0.x;
MUL.F R0.xy, R0.zwzw, c[4].zwzw;
SGT.S R0.z, fragment.facing.x, {0, 0, 0, 0}.x;
MOV.U.CC RC.x, -R0.z;
FRC.F R0.xy, R0;
IF NE.x;
MOV.F R0.z, {1, 0, 0, 0}.x;
ELSE;
MOV.F R0.z, {-1, 0, 0, 0}.x;
ENDIF;
MAD.F R1.xyz, R0.z, c[1], c[2];
PK64.U D0.x, c[0];
TEX.F R0, R0, handle(D0.x), 2D;
MUL.F R1.xyz, R1, c[3].y;
MAD.F result_color0.xyz, R0, c[3].x, R1;
MOV.F result_color0.w, R0;
END
                                                 {switch};
USE {switch::local(f)};
OPTION NV_bindless_texture;
 ATTRIB vertex_attrib[] = { vertex.attrib[0..3] };
OUTPUT result_attrib[] = { result.attrib[0..1] };
MOV.F result.attrib[1], vertex.attrib[3];
MOV.F result.attrib[0].xyz, vertex.attrib[0];
END
                                                                                                                                                  †   !!NVfp5.0
OPTION NV_bindless_texture;
 PARAM c[3] = { program.local[0..2] };
ATTRIB fragment_attrib[] = { fragment.attrib[0..0] };
TEMP R0, R1;
TEMP RC, HC;
OUTPUT result_color0 = result.color;
SGT.F R0.x, c[0], {0, 0, 0, 0};
TRUNC.U.CC HC.x, R0;
IF NE.x;
MUL.F R0.xy, fragment.position, c[0].x;
FRC.F R0.xy, R0;
SGT.F R0.w, R0.y, {0.400000006, 0, 0, 0}.x;
SLT.F R0.z, R0.x, {0.400000006, 0, 0, 0}.x;
SLT.F R0.y, R0, {0.400000006, 0, 0, 0}.x;
SGT.F R0.x, R0, {0.400000006, 0, 0, 0};
TRUNC.U R0.w, R0;
TRUNC.U R0.z, R0;
AND.U R0.z, R0, R0.w;
TRUNC.U R0.y, R0;
TRUNC.U R0.x, R0;
AND.U R0.x, R0, R0.y;
OR.U.CC HC.x, R0, R0.z;
IF NE.x;
MOV.U.CC RC.x, {1, 0, 0, 0};
KIL NE.x;
ENDIF;
ENDIF;
SLT.F R1.x, fragment.attrib[0].w, c[2];
TRUNC.U.CC HC.x, R1;
ADD.F R0.xyz, fragment.attrib[0], c[1];
MOV.F R0.w, fragment.attrib[0];
IF NE.x;
MOV.U.CC RC.x, {1, 0, 0, 0};
KIL NE.x;
ENDIF;
MOV.F result_color0, R0;
END
                                                                                                                                                    ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ                                                                                                                                        €  !!NVgp5.0
OPTION NV_bindless_texture;
PRIMITIVE_IN LINES;
PRIMITIVE_OUT TRIANGLE_STRIP;
VERTICES_OUT 4;
 PARAM c[7] = { program.local[0..6] };
ATTRIB vertex_attrib[] = { vertex.attrib[0..1] };
OUTPUT result_position = result.position;
OUTPUT result_attrib[] = { result.attrib[0..0] };
TEMP R0, R1, R2, R3, R4, R5;
TEMP RC, HC;
MUL.F R0, vertex[0].attrib[0].y, c[1];
MUL.F R1, vertex[1].attrib[0].y, c[1];
MAD.F R0, vertex[0].attrib[0].x, c[0], R0;
MAD.F R1, vertex[1].attrib[0].x, c[0], R1;
MAD.F R0, vertex[0].attrib[0].z, c[2], R0;
MAD.F R1, vertex[1].attrib[0].z, c[2], R1;
ADD.F R1, R1, c[3];
ADD.F R0, R0, c[3];
DIV.F R2.zw, R0.xyxy, R0.w;
RCP.F R2.x, R1.w;
MAD.F R2.xy, R1, R2.x, -R2.zwzw;
MOV.F R2.w, R2.x;
MOV.F R2.z, -R2.y;
MUL.F R2.zw, R2, c[6].xyyx;
DP2.F R3.x, R2.zwzw, R2.zwzw;
RSQ.F R3.x, R3.x;
MUL.F R2.zw, R3.x, R2;
MUL.F R2.zw, R2, c[6];
SNE.S R3.x, c[4], {65535, 0, 0, 0};
MOV.U.CC RC.x, -R3;
MUL.F R4.xy, R2.zwzw, c[5].x;
IF NE.x;
MUL.F R2.xy, R2, c[6];
DP2.F R2.x, R2, R2;
RSQ.F R2.x, R2.x;
DIV.F R4.z, {0.5, 0, 0, 0}.x, R2.x;
MOV.S R5.z, {1, 0, 0, 0}.x;
MOV.S R4.w, {1, 0, 0, 0}.x;
MOV.F R5.x, {0, 0, 0, 0};
MOV.F R5.y, {0, 0, 0, 0}.x;
REP.S ;
SGE.F.CC HC.x, R5.y, R4.z;
BRK (NE.x);
AND.S R2.x, R4.w, c[4];
SNE.S R2.y, R2.x, {0, 0, 0, 0}.x;
SEQ.S R2.x, R5.z, {0, 0, 0, 0};
AND.U.CC HC.x, -R2, -R2.y;
IF NE.x;
MOV.F R5.x, R5.y;
MOV.S R5.z, {1, 0, 0, 0}.x;
ELSE;
AND.S R2.x, R4.w, c[4];
SEQ.S R2.y, R2.x, {0, 0, 0, 0}.x;
SEQ.S R2.x, R5.z, {1, 0, 0, 0};
AND.U.CC HC.x, -R2, -R2.y;
IF NE.x;
DIV.F R5.x, R5, R4.z;
ADD.F R2, R1, -R0;
MAD.F R2, R5.x, R2, R0;
MAD.F result.position.xy, R4, R2.w, R2;
ADD.F R3, vertex[1].attrib[1], -vertex[0].attrib[1];
MOV.F result.position.zw, R2;
MAD.F result.attrib[0], R5.x, R3, vertex[0].attrib[1];
DIV.F R5.w, R5.y, R4.z;
MOV.S R5.z, {0, 0, 0, 0}.x;
EMIT;
ADD.F R2, R1, -R0;
MAD.F R2, R5.w, R2, R0;
MAD.F result.position.xy, R4, R2.w, R2;
ADD.F R3, vertex[1].attrib[1], -vertex[0].attrib[1];
MOV.F result.position.zw, R2;
MAD.F result.attrib[0], R5.w, R3, vertex[0].attrib[1];
EMIT;
ADD.F R2, R1, -R0;
MAD.F R2, R5.x, R2, R0;
MAD.F result.position.xy, -R4, R2.w, R2;
ADD.F R3, vertex[1].attrib[1], -vertex[0].attrib[1];
MOV.F result.position.zw, R2;
MAD.F result.attrib[0], R5.x, R3, vertex[0].attrib[1];
EMIT;
ADD.F R2, R1, -R0;
MAD.F R2, R5.w, R2, R0;
MAD.F result.position.xy, -R4, R2.w, R2;
ADD.F R3, vertex[1].attrib[1], -vertex[0].attrib[1];
MOV.F result.position.zw, R2;
MAD.F result.attrib[0], R5.w, R3, vertex[0].attrib[1];
EMIT;
ENDPRIM;
ENDIF;
ENDIF;
SHL.S R4.w, R4, {1, 0, 0, 0}.x;
SEQ.S R2.x, R4.w, {65536, 0, 0, 0};
MOV.U.CC RC.x, -R2;
ADD.F R5.y, R5, {10, 0, 0, 0}.x;
IF NE.x;
MOV.S R4.w, {1, 0, 0, 0}.x;
ENDIF;
ENDREP;
ELSE;
MAD.F result.position.xy, R4, R0.w, R0;
MOV.F result.position.zw, R0;
MOV.F result.attrib[0], vertex[0].attrib[1];
EMIT;
MAD.F result.position.xy, R4, R1.w, R1;
MOV.F result.position.zw, R1;
MOV.F result.attrib[0], vertex[1].attrib[1];
EMIT;
MAD.F result.position.xy, -R4, R0.w, R0;
MOV.F result.position.zw, R0;
MOV.F result.attrib[0], vertex[0].attrib[1];
EMIT;
MAD.F result.position.xy, -R4, R1.w, R1;
MOV.F result.position.zw, R1;
MOV.F result.attrib[0], vertex[1].attrib[1];
EMIT;
ENDPRIM;
ENDIF;
END

